#!/usr/bin/make -f

#export DH_VERBOSE=1
export DH_COMPAT=3
export MONO_SHARED_DIR=$(CURDIR)

DEB_BUILD_ARCH := $(shell dpkg-architecture -qDEB_BUILD_ARCH)

ifeq ($(shell dpkg-architecture -qDEB_BUILD_ARCH),sparc)
JIT = --with-jit=no
endif

ifeq ($(shell dpkg-architecture -qDEB_BUILD_ARCH),s390)
JIT = --with-jit=no --with-nptl=no
ATG = arch_target=s390
endif

ifeq ($(shell dpkg-architecture -qDEB_BUILD_ARCH),alpha)
JIT = --with-jit=no
ATG = arch_target=alpha
endif

ifeq ($(shell dpkg-architecture -qDEB_BUILD_ARCH),arm)
JIT = --with-jit=no
ATG = arch_target=arm
endif

VERSION = $(shell dpkg-parsechangelog | grep ^Vers | cut -d\  -f2)
UPVERSION = $(shell echo $(VERSION) | sed 's,-.*,,')

include /usr/share/dpatch/dpatch.make

cli-wrapper: debian/cli-wrapper.c
	$(CC) -o cli-wrapper debian/cli-wrapper.c `pkg-config glib-2.0 --cflags --libs`

build: patch build-stamp
#build: build-stamp
build-stamp: cli-wrapper
	dh_testdir
	# using a better dllmap (should be fixed since beta1)
	#cp $(CURDIR)/debian/config.in $(CURDIR)/data/config.in
	./configure --prefix=/usr --with-gc=included \
	  --mandir=\$${prefix}/share/man \
	  --infodir=\$${prefix}/share/info \
	  --sysconfdir=/etc --with-sigaltstack=no $(JIT) \
	  --with-preview=yes
	# we don't touch precompiled stuff
	perl -pe 's,\ runtime\ ,  ,' -i Makefile
	$(MAKE) -j5 $(ATG)
	( cat debian/mono-jit.postinst.head; ARCH= ; case `dpkg-architecture -qDEB_HOST_ARCH` in i386|powerpc|s390) cat debian/mono-jit.postinst.mono-setup ;; *) cat debian/mono-jit.postinst.mint-setup ;; esac ) > debian/mono-jit.postinst
	touch build-stamp

clean: unpatch
#clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp
	# Use the right clean target depending if we ran ./autogen.sh or not
	-if [ -e "needs-maintclean" ]; then	\
	  rm -f needs-maintclean;		\
	  $(MAKE) maintainer-clean;		\
	else					\
	  $(MAKE) distclean;			\
	fi
	-cd debian/detector && $(MAKE) clean
	# I shouldn't have to do this
	rm -f mono/arch/arm/Makefile mono/arch/ppc/Makefile \
	  mono/arch/sparc/Makefile mono/os/win32/Makefile \
	  data/config config.log cli-wrapper
	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs
	$(MAKE) $(ATG) install DESTDIR=$(CURDIR)/debian/tmp
	cd debian ; for x in dh_netdeps dh_makenetlibs dh_installxsp ; \
		do chmod +x $$x; pod2man $$x > $$x.1 ; done
	# removing trash (real assemblies/libs get build by the mcs source package)
	rm -f $(CURDIR)/debian/tmp/usr/lib/mscorlib.dll
	rm -rf $(CURDIR)/debian/tmp/usr/lib/mono
	install -D -m755 cli-wrapper $(CURDIR)/debian/mono-common/usr/bin/cli-wrapper
	cd $(CURDIR)/debian/detector && $(MAKE) $(ATG) && install -D -m755 binfmt-detector-cli $(CURDIR)/debian/mono-common/usr/lib/cli/binfmt-detector-cli
	install -o root -g root -m 644 debian/cli.binfmt \
	  debian/mono-common/usr/share/binfmts/cli

# Build architecture-independent files here.
binary-indep: build install
	dh_testdir -i
	dh_testroot -i
	dh_install -i --list-missing
	dh_link -i
	dh_installchangelogs -i ChangeLog
	dh_installdocs -i
#	dh_installexamples -i
#	dh_installdebconf -i
#	dh_installinfo -i
#	dh_undocumented -i
	dh_installman -i
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
	dh_gencontrol -i -- -Vmono:upversion=$(UPVERSION)
	dh_md5sums -i
	dh_builddeb -i

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir -s
	dh_testroot -s
	dh_install -s --list-missing
	dh_link -s
	install -m644 -D debian/lintian debian/mono/usr/share/lintian/overrides/mono
	dh_installchangelogs -s
	dh_installdocs -s
	dh_installexamples -s
	dh_installmenu -s
#	dh_installdebconf -s
#	dh_installinfo -s
	dh_undocumented -s
	dh_installman -s
	dh_strip -s
	dh_compress -s
	dh_fixperms -s
	if test -d debian/libmono0 ; then dh_makeshlibs -plibmono0 -V 'libmono-$(UPVERSION)' ;fi
	#dh_makeshlibs -plibmint0 -V 'libmint0 (= $(VERSION))'
	dh_installdeb -s
	dh_shlibdeps -s -Xlibmono-profiler-cov
	# fix cross-dependencies... but calls for trouble... using -X for now
	# perl -pe 's/(Depends:.*)libmono0[^,\n]+[,\n](.*)/$$1$$2/' -i debian/libmono0/DEBIAN/control
	dh_gencontrol -s -- -Vmono:upversion=$(UPVERSION)
	dh_md5sums -s
	dh_builddeb -s

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install
