#! /bin/sh /usr/share/dpatch/dpatch-run
## 
##
## All lines beginning with ## DP:' are a description of the patch.
## DP: kfreebsd support - mainly backport of gc 6.8

@DPATCH@
diff -urNad mono-2.4+dfsg~/configure.in mono-2.4+dfsg/configure.in
--- mono-2.4+dfsg~/configure.in	2009-04-11 03:00:41.000000000 +0200
+++ mono-2.4+dfsg/configure.in	2009-04-11 03:02:23.000000000 +0200
@@ -98,6 +98,16 @@
 		libgc_threads=pthreads
 		with_sigaltstack=no
 		;;
+	*-*-kfreebsd*-gnu)
+		platform_win32=no
+		CPPFLAGS="$CPPFLAGS -DGC_FREEBSD_THREADS -D_GNU_SOURCE -D_REENTRANT -DUSE_MMAP -DUSE_MUNMAP -DTHREAD_LOCAL_ALLOC -pthread"
+		libmono_cflags="-D_REENTRANT -DTHREAD_LOCAL_ALLOC -pthread"
+		libmono_ldflags="-lpthread -pthread"
+		libdl="-ldl"
+		libgc_threads=pthreads
+		need_link_unlink=yes
+		with_sigaltstack=no
+		;;
 	*-*-*freebsd*)
 		platform_win32=no
 		if test "x$PTHREAD_CFLAGS" = "x"; then
@@ -2011,6 +2021,11 @@
 	LIBC="libc.so.12"
 	INTL="libintl.so.0"
 	;;
+     *-*-kfreebsd*-gnu)
+	LIBC="libc.so.0.1"
+	INTL="libc.so.0.1"
+	X11="libX11.so.6"
+	;;
     *-*-*freebsd*)
     	LIBC="libc.so"
 	INTL="libintl.so"
diff -urNad mono-2.4+dfsg~/libgc/configure.in mono-2.4+dfsg/libgc/configure.in
--- mono-2.4+dfsg~/libgc/configure.in	2009-04-11 03:00:20.000000000 +0200
+++ mono-2.4+dfsg/libgc/configure.in	2009-04-11 03:00:52.000000000 +0200
@@ -112,6 +112,17 @@
 	AC_DEFINE(THREAD_LOCAL_ALLOC)
 	THREADDLLIBS="-lpthread -lrt"
 	;;
+     *-*-kfreebsd*-gnu)
+	AC_DEFINE(GC_FREEBSD_THREADS)
+	INCLUDES="$INCLUDES -pthread"
+	THREADDLLIBS=-pthread
+	AC_DEFINE(_REENTRANT)
+	if test "${enable_parallel_mark}" = yes; then
+		AC_DEFINE(PARALLEL_MARK)
+	fi
+	AC_DEFINE(THREAD_LOCAL_ALLOC)
+	AC_DEFINE(USE_COMPILER_TLS)
+	;;
       *-*-freebsd*)
 	AC_DEFINE(GC_FREEBSD_THREADS)
 	if test "x$PTHREAD_CFLAGS" != "x"; then
diff -urNad mono-2.4+dfsg~/libgc/dyn_load.c mono-2.4+dfsg/libgc/dyn_load.c
--- mono-2.4+dfsg~/libgc/dyn_load.c	2009-04-11 03:00:20.000000000 +0200
+++ mono-2.4+dfsg/libgc/dyn_load.c	2009-04-11 03:00:52.000000000 +0200
@@ -26,7 +26,7 @@
  * None of this is safe with dlclose and incremental collection.
  * But then not much of anything is safe in the presence of dlclose.
  */
-#if defined(__linux__) && !defined(_GNU_SOURCE)
+#if (defined(__linux__) || defined(__GLIBC__)) && !defined(_GNU_SOURCE)
     /* Can't test LINUX, since this must be define before other includes */
 #   define _GNU_SOURCE
 #endif
@@ -386,7 +386,7 @@
 /* For glibc 2.2.4+.  Unfortunately, it doesn't work for older	*/
 /* versions.  Thanks to Jakub Jelinek for most of the code.	*/
 
-# if defined(LINUX) /* Are others OK here, too? */ \
+# if (defined(LINUX) || defined (__GLIBC__)) /* Are others OK here, too? */ \
      && (__GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ > 2) \
          || (__GLIBC__ == 2 && __GLIBC_MINOR__ == 2 && defined(DT_CONFIG))) 
 
diff -urNad mono-2.4+dfsg~/libgc/include/gc.h mono-2.4+dfsg/libgc/include/gc.h
--- mono-2.4+dfsg~/libgc/include/gc.h	2009-04-11 03:00:20.000000000 +0200
+++ mono-2.4+dfsg/libgc/include/gc.h	2009-04-11 03:00:52.000000000 +0200
@@ -488,7 +488,7 @@
 #   define GC_RETURN_ADDR (GC_word)__return_address
 #endif
 
-#ifdef __linux__
+#if defined(__linux__) || defined(__GLIBC__)
 # include <features.h>
 # if (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 1 || __GLIBC__ > 2) \
      && !defined(__ia64__)
diff -urNad mono-2.4+dfsg~/libgc/include/private/gcconfig.h mono-2.4+dfsg/libgc/include/private/gcconfig.h
--- mono-2.4+dfsg~/libgc/include/private/gcconfig.h	2009-04-11 03:00:20.000000000 +0200
+++ mono-2.4+dfsg/libgc/include/private/gcconfig.h	2009-04-11 03:00:52.000000000 +0200
@@ -55,7 +55,7 @@
 # endif
 
 /* And one for FreeBSD: */
-# if defined(__FreeBSD__) && !defined(FREEBSD)
+# if (defined(__FreeBSD__) || defined(__FreeBSD_kernel__)) && !defined(FREEBSD)
 #    define FREEBSD
 # endif
 
@@ -1291,8 +1291,15 @@
 #	ifndef GC_FREEBSD_THREADS
 #	    define MPROTECT_VDB
 #	endif
-#      define SIG_SUSPEND SIGTSTP
-#      define SIG_THR_RESTART SIGCONT
+#       ifdef __GLIBC__
+#           define SIG_SUSPEND          (32+6)
+#           define SIG_THR_RESTART      (32+5)
+            extern int _end[];
+#           define DATAEND (_end)
+#       else
+#           define SIG_SUSPEND SIGTSTP
+#           define SIG_THR_RESTART SIGCONT
+#       endif
 #	define FREEBSD_STACKBOTTOM
 #	ifdef __ELF__
 #	    define DYNAMIC_LOADING
@@ -2032,6 +2039,28 @@
 	extern char * GC_FreeBSDGetDataStart();
 #	define DATASTART GC_FreeBSDGetDataStart(0x1000, &etext)
 #   endif
+#   ifdef FREEBSD
+#	define OS_TYPE "FREEBSD"
+#	ifndef GC_FREEBSD_THREADS
+#	    define MPROTECT_VDB
+#	endif
+#	ifdef __GLIBC__
+#	    define SIG_SUSPEND		(32+6)
+#	    define SIG_THR_RESTART	(32+5)
+	    extern int _end[];
+#	    define DATAEND (_end)
+#	else
+#	    define SIG_SUSPEND SIGUSR1
+#	    define SIG_THR_RESTART SIGUSR2
+#	endif
+#	define FREEBSD_STACKBOTTOM
+#	ifdef __ELF__
+#	    define DYNAMIC_LOADING
+#	endif
+	extern char etext[];
+	extern char * GC_FreeBSDGetDataStart();
+#	define DATASTART GC_FreeBSDGetDataStart(0x1000, &etext)
+#   endif
 #   ifdef NETBSD
 #	define OS_TYPE "NETBSD"
 #	ifdef __ELF__
@@ -2103,7 +2132,7 @@
 #   define SUNOS5SIGS
 # endif
 
-# if defined(FREEBSD) && (__FreeBSD__ >= 4)
+# if defined(FREEBSD) && ((__FreeBSD__ >= 4) || (__FreeBSD_kernel__ >= 4))
 #   define SUNOS5SIGS
 # endif
 
@@ -2166,7 +2195,7 @@
 #   define CACHE_LINE_SIZE 32	/* Wild guess	*/
 # endif
 
-# ifdef LINUX
+# if defined(LINUX) || defined(__GLIBC__)
 #   define REGISTER_LIBRARIES_EARLY
     /* We sometimes use dl_iterate_phdr, which may acquire an internal	*/
     /* lock.  This isn't safe after the world has stopped.  So we must	*/
@@ -2247,7 +2276,7 @@
 #if defined(SPARC)
 # define CAN_SAVE_CALL_ARGS
 #endif
-#if (defined(I386) || defined(X86_64)) && defined(LINUX)
+#if (defined(I386) || defined(X86_64)) && (defined(LINUX) || defined(__GLIBC__))
 	    /* SAVE_CALL_CHAIN is supported if the code is compiled to save	*/
 	    /* frame pointers by default, i.e. no -fomit-frame-pointer flag.	*/
 # define CAN_SAVE_CALL_ARGS
diff -urNad mono-2.4+dfsg~/mono/mini/exceptions-amd64.c mono-2.4+dfsg/mono/mini/exceptions-amd64.c
--- mono-2.4+dfsg~/mono/mini/exceptions-amd64.c	2009-04-11 03:00:20.000000000 +0200
+++ mono-2.4+dfsg/mono/mini/exceptions-amd64.c	2009-04-11 03:00:52.000000000 +0200
@@ -740,7 +740,7 @@
 static inline guint64*
 gregs_from_ucontext (ucontext_t *ctx)
 {
-#ifdef __FreeBSD__
+#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
     guint64 *gregs = (guint64 *) &ctx->uc_mcontext;
 #else
     guint64 *gregs = (guint64 *) &ctx->uc_mcontext.gregs;
diff -urNad mono-2.4+dfsg~/mono/mini/mini-amd64.h mono-2.4+dfsg/mono/mini/mini-amd64.h
--- mono-2.4+dfsg~/mono/mini/mini-amd64.h	2009-04-11 03:00:20.000000000 +0200
+++ mono-2.4+dfsg/mono/mini/mini-amd64.h	2009-04-11 03:00:52.000000000 +0200
@@ -245,8 +245,7 @@
 
 #define MONO_ARCH_NOMAP32BIT
 
-#elif defined (__FreeBSD__)
-
+#elif defined (__FreeBSD__) || defined(__FreeBSD_kernel__)
 #define REG_RAX 7
 #define REG_RCX 4
 #define REG_RDX 3
