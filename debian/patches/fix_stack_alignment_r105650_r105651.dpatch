#! /bin/sh /usr/share/dpatch/dpatch-run
## fix_stack_alignment_r105650_r105651.dpatch by Mirco Bauer <meebey@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Fixes stack alignment, caused assertions on AMD64, see:
## DP: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=473119
## DP: Patch taken from upstream SVN revision 105650 and 105651.

@DPATCH@
diff -urNad mono-1.9.1+dfsg~/mono/metadata/threads.c mono-1.9.1+dfsg/mono/metadata/threads.c
--- mono-1.9.1+dfsg~/mono/metadata/threads.c	2008-01-29 23:02:34.000000000 +0100
+++ mono-1.9.1+dfsg/mono/metadata/threads.c	2008-06-17 23:42:04.000000000 +0200
@@ -700,8 +700,8 @@
 /*
  * mono_thread_get_stack_bounds:
  *
- *   Return the address and size of the current threads stack. Return NULL as the stack
- * address if the stack address cannot be determined.
+ *   Return the address and size of the current threads stack. Return NULL as the 
+ * stack address if the stack address cannot be determined.
  */
 void
 mono_thread_get_stack_bounds (guint8 **staddr, size_t *stsize)
@@ -709,6 +709,7 @@
 #if defined(HAVE_PTHREAD_GET_STACKSIZE_NP) && defined(HAVE_PTHREAD_GET_STACKADDR_NP)
 	*staddr = (guint8*)pthread_get_stackaddr_np (pthread_self ());
 	*stsize = pthread_get_stacksize_np (pthread_self ());
+	*staddr = (guint8*)((gssize)*staddr & ~(mono_pagesize () - 1));
 	return;
 	/* FIXME: simplify the mess below */
 #elif !defined(PLATFORM_WIN32)
@@ -717,28 +718,31 @@
 
 	pthread_attr_init (&attr);
 #ifdef HAVE_PTHREAD_GETATTR_NP
-		pthread_getattr_np (pthread_self(), &attr);
+	pthread_getattr_np (pthread_self(), &attr);
 #else
 #ifdef HAVE_PTHREAD_ATTR_GET_NP
-		pthread_attr_get_np (pthread_self(), &attr);
+	pthread_attr_get_np (pthread_self(), &attr);
 #elif defined(sun)
-		*staddr = NULL;
-		pthread_attr_getstacksize (&attr, &stsize);
+	*staddr = NULL;
+	pthread_attr_getstacksize (&attr, &stsize);
 #else
-		*staddr = NULL;
-		*stsize = 0;
-		return;
+	*staddr = NULL;
+	*stsize = 0;
+	return;
 #endif
 #endif
 
 #ifndef sun
-		pthread_attr_getstack (&attr, (void**)staddr, stsize);
-		if (*staddr)
-			g_assert ((current > *staddr) && (current < *staddr + *stsize));
+	pthread_attr_getstack (&attr, (void**)staddr, stsize);
+	if (*staddr)
+		g_assert ((current > *staddr) && (current < *staddr + *stsize));
 #endif
 
-		pthread_attr_destroy (&attr); 
+	pthread_attr_destroy (&attr); 
 #endif
+
+	/* When running under emacs, sometimes staddr is not aligned to a page size */
+	*staddr = (guint8*)((gssize)*staddr & ~(mono_pagesize () - 1));
 }	
 
 MonoThread *
