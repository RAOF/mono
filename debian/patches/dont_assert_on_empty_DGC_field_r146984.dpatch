#! /bin/sh /usr/share/dpatch/dpatch-run
## dont_assert_on_empty_DGC_field_r146984.dpatch by Jo Shields <directhex@apebox.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Backport of upstream SVN revision r146984. Stops IKVM from crashing
## DP: during compilation. This was a regression between 2.4 and 2.4.2

@DPATCH@
diff -urNad mono-2.4.2.3+dfsg~/mono/metadata/reflection.c mono-2.4.2.3+dfsg/mono/metadata/reflection.c
--- mono-2.4.2.3+dfsg~/mono/metadata/reflection.c	2010-01-06 16:54:46.000000000 +0000
+++ mono-2.4.2.3+dfsg/mono/metadata/reflection.c	2010-01-06 16:58:17.000000000 +0000
@@ -2576,16 +2576,29 @@
 static MonoType*
 get_field_on_inst_generic_type (MonoClassField *field)
 {
+	MonoClass *class, *gtd;
 	MonoDynamicGenericClass *dgclass;
 	int field_index;
 
 	g_assert (is_field_on_inst (field));
 
 	dgclass = (MonoDynamicGenericClass*)field->parent->generic_class;
-	field_index = field - dgclass->fields;
 
-	g_assert (field_index >= 0 && field_index < dgclass->count_fields);
-	return dgclass->field_generic_types [field_index];
+	if (field >= dgclass->fields && field - dgclass->fields < dgclass->count_fields) {
+		field_index = field - dgclass->fields;
+		return dgclass->field_generic_types [field_index];		
+	}
+
+	class = field->parent;
+	gtd = class->generic_class->container_class;
+
+	if (field >= class->fields && field - class->fields < class->field.count) {
+		field_index = field - class->fields;
+		return gtd->fields [field_index].type;
+	}
+
+	g_assert_not_reached ();
+	return 0;
 }
 
 static guint32
